#Coursera
import pandas as pd
import matplotlib.pyplot as plt
# Usaremos ações de grandes empresas

facebook = pd.read_csv('facebook.csv')
# print(facebook.head())
print(facebook.shape)
"""
Quantidade de linhas e colunas -> (780, 7)
"""
# print(facebook.tail())
# print(facebook.describe())
"""
             Open        High         Low       Close   Adj Close        Volume
count  780.000000  780.000000  780.000000  780.000000  780.000000  7.800000e+02 // linhas preenchidas
mean    80.212705   81.285654   79.022397   80.264897   79.914215  1.204453e+07 // Valor médio
std     64.226121   65.048907   63.190963   64.198375   64.327846  8.221848e+06 // Desvio padrao(o quanto o valor oscila pra + e -)
min     19.250000   19.500000   18.940001   19.139999   18.576082  1.311200e+06 // Valor minimo
25%     25.525000   26.085000   24.845000   25.475000   25.134512  7.215200e+06 // 25% dos valores estão abaixo desse
50%     53.379999   54.034999   52.930000   53.420000   53.035403  9.728700e+06 // 50% dos valores estão abaixo desse
75%    113.322502  115.779999  110.297499  113.702501  113.261238  1.408885e+07 // 75% dos valores estão abaixo desse
max    245.770004  249.270004  244.449997  246.850006  246.850006  9.232320e+07 // Valor mais alto
"""
preco_fechamento_futuro = facebook.copy()
preco_fechamento_futuro['Close price of tommorow'] = facebook[['Close']].shift(-1)
# print(preco_fechamento_futuro)
""""
           Date        Open        High         Low       Close   Adj Close    Volume  Close price of tommorow
0    2014-12-31   20.400000   20.510000   19.990000   20.049999   19.459270   4157500                20.129999
1    2015-01-02   20.129999   20.280001   19.809999   20.129999   19.536913   2842000                19.790001
2    2015-01-05   20.129999   20.190001   19.700001   19.790001   19.206934   4948800                19.190001
3    2015-01-06   19.820000   19.840000   19.170000   19.190001   18.624611   4944100                19.139999
4    2015-01-07   19.330000   19.500000   19.080000   19.139999   18.576082   8045200                19.860001
..          ...         ...         ...         ...         ...         ...       ...                      ...
775  2018-01-30  241.110001  246.419998  238.410004  242.720001  242.720001  14270800               245.800003
776  2018-01-31  245.770004  249.270004  244.449997  245.800003  245.800003  11964400               240.500000
777  2018-02-01  238.520004  246.899994  238.059998  240.500000  240.500000  12980600               233.520004
778  2018-02-02  237.000000  237.970001  231.169998  233.520004  233.520004  17961600               213.699997
779  2018-02-05  227.000000  233.229996  205.000000  213.699997  213.699997  28869000                      NaN"""

diferenca_preco = preco_fechamento_futuro.copy()
diferenca_preco['PriceDiff'] = preco_fechamento_futuro['Close price of tommorow'] - facebook['Close'] 
# print(diferenca_preco)
"""
           Date        Open        High         Low       Close   Adj Close    Volume  PriceDiff
0    2014-12-31   20.400000   20.510000   19.990000   20.049999   19.459270   4157500   0.080000
1    2015-01-02   20.129999   20.280001   19.809999   20.129999   19.536913   2842000  -0.339998
2    2015-01-05   20.129999   20.190001   19.700001   19.790001   19.206934   4948800  -0.600000
3    2015-01-06   19.820000   19.840000   19.170000   19.190001   18.624611   4944100  -0.050002
4    2015-01-07   19.330000   19.500000   19.080000   19.139999   18.576082   8045200   0.720002
..          ...         ...         ...         ...         ...         ...       ...        ...
775  2018-01-30  241.110001  246.419998  238.410004  242.720001  242.720001  14270800   3.080002
776  2018-01-31  245.770004  249.270004  244.449997  245.800003  245.800003  11964400  -5.300003
777  2018-02-01  238.520004  246.899994  238.059998  240.500000  240.500000  12980600  -6.979996
778  2018-02-02  237.000000  237.970001  231.169998  233.520004  233.520004  17961600 -19.820007
779  2018-02-05  227.000000  233.229996  205.000000  213.699997  213.699997  28869000        NaN"""

retorno_diario = diferenca_preco.copy()
retorno_diario['Return'] = diferenca_preco['PriceDiff'] / facebook['Close']
# print(retorno_diario)
# print(retorno_diario.describe())
"""
             Open        High         Low       Close   Adj Close        Volume  Close price of tommorow   PriceDiff      Return
count  780.000000  780.000000  780.000000  780.000000  780.000000  7.800000e+02               779.000000  779.000000  779.000000
mean    80.212705   81.285654   79.022397   80.264897   79.914215  1.204453e+07                80.342195    0.248588    0.003362
std     64.226121   65.048907   63.190963   64.198375   64.327846  8.221848e+06                64.203290    2.583929    0.025850
min     19.250000   19.500000   18.940001   19.139999   18.576082  1.311200e+06                19.139999  -19.820007   -0.092723
25%     25.525000   26.085000   24.845000   25.475000   25.134512  7.215200e+06                25.610000   -0.379999   -0.008059
50%     53.379999   54.034999   52.930000   53.420000   53.035403  9.728700e+06                53.520000    0.090000    0.002504
75%    113.322502  115.779999  110.297499  113.702501  113.261238  1.408885e+07               113.785000    0.760002    0.013861
max    245.770004  249.270004  244.449997  246.850006  246.850006  9.232320e+07               246.850006   20.200004    0.298067"""

direcao = retorno_diario.copy()
direcao['Direction'] = [1 if retorno_diario.loc[varInterar, 'PriceDiff'] > 0 else -1 for varInterar in retorno_diario.index]
"""Operador ternario 1 se a condicao for satisfeita -1 se nao, pode ser qualquer valor
Uma variavel é criada para iterar sobre cada item da coluna PriceDiff"""
print(direcao)


